{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","state","date","Date","parent","future","undefined","calculate","bind","updateDate","console","log","diff","Math","abs","getTime","this","floor","setState","hasFuture","className","src","alt","type","name","value","checked","onChange","e","updateParent","target","mode","required","defaultSelected","onSelect","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAiHeA,E,kDAnGb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,KACVC,OAAQ,KACRC,YAAQC,GAGV,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBATI,E,6CAYxB,WACEE,QAAQC,IAAI,eACZ,IAAIC,EAAOC,KAAKC,KAAI,IAAIX,MAAOY,UAAYC,KAAKf,MAAMC,KAAKa,WAEzCF,KAAKI,MAAML,EAAO,IAAO,GAAK,GAAK,GAAK,GAExC,IAAM,EACtBI,KAAKE,SAAS,CACZb,OAAQW,KAAKf,MAAMG,SAGrBY,KAAKE,SAAS,CACZb,OAA8B,OAAtBW,KAAKf,MAAMG,OAAkB,KAAO,S,wBAMlD,SAAWF,GACTc,KAAKE,SAAS,CACZhB,SAGFc,KAAKT,c,0BAGP,SAAaH,GACXY,KAAKE,SAAS,CACZd,WAGFY,KAAKT,c,oBAGP,WAAU,IAAD,OAEDY,OAAkCb,IAAtBU,KAAKf,MAAMI,OAE7B,OACE,sBAAKe,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAI,WAAWD,UAAU,WAAWE,IAAI,SAC7C,gDAEF,sBAAKF,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,6DACA,kCACA,uBACEG,KAAK,QACLC,KAAK,OACLC,MAAM,KACNC,QAA+B,OAAtBV,KAAKf,MAAMG,OACpBuB,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,EAAEE,OAAOL,UAN9C,QASA,kCACE,uBACAF,KAAK,QACLC,KAAK,OACLC,MAAM,KACNC,QAA+B,OAAtBV,KAAKf,MAAMG,OACpBuB,SAAU,SAACC,GAAD,OAAO,EAAKC,aAAaD,EAAEE,OAAOL,UAN9C,WASA,wEACA,cAAC,IAAD,CACEM,KAAK,SACLC,UAAQ,EACRC,gBAAiBjB,KAAKf,MAAMC,KAC5BgC,SAAU,SAACN,GAAD,OAAO,EAAKnB,WAAWmB,SAErC,sBAAKR,UAAU,aAAf,WACID,GACF,2DAECA,GACD,4BAAIH,KAAKf,MAAMI,eAtCrB,YA0CW,mBAAG8B,KAAK,oIAAR,sBA1CX,SA0CqL,mBAAGA,KAAK,8GAAR,4B,GA/FzKC,IAAMC,WCETC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac7d1fed.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/style.css';\n\ninterface State {\n  date: Date,\n  parent: string,\n  future?: string\n}\n\nclass App extends React.Component<{}, State> {\n\n  constructor(props : {}) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      parent: \"me\",\n      future: undefined\n    };\n\n    this.calculate = this.calculate.bind(this)\n    this.updateDate = this.updateDate.bind(this)\n  }\n\n  calculate() {\n    console.log(\"calculating\")\n    let diff = Math.abs(new Date().getTime() - this.state.date.getTime())\n\n    let diffInWeeks = Math.floor(diff / 1000 / 60 / 60 / 24 / 7);\n\n    if (diffInWeeks % 2 === 0) {\n      this.setState({\n        future: this.state.parent\n      })\n    } else {\n      this.setState({\n        future: this.state.parent === \"me\" ? \"ex\" : \"me\"\n      })\n    }\n\n  }\n\n  updateDate(date: Date) {\n    this.setState({\n      date\n    })\n\n    this.calculate()\n  }\n\n  updateParent(parent: string) {\n    this.setState({\n      parent\n    })\n\n    this.calculate()\n  }\n\n  render() {\n\n    const hasFuture = this.state.future !== undefined;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src=\"baby.jpg\" className=\"App-logo\" alt=\"logo\" />\n          <h1> Efo Yeled </h1>\n        </header>\n        <div className=\"App-container\"> \n          <div className=\"App-body\">\n            <p>This weekend, kids are with:</p>\n            <label>\n            <input \n              type=\"radio\" \n              name=\"kids\" \n              value=\"me\" \n              checked={this.state.parent === \"me\"}\n              onChange={(e) => this.updateParent(e.target.value)} />\n              me\n            </label>\n            <label>\n              <input \n              type=\"radio\" \n              name=\"kids\" \n              value=\"ex\" \n              checked={this.state.parent === \"ex\"}\n              onChange={(e) => this.updateParent(e.target.value)}/>\n              my ex\n            </label>\n            <p> Pick the weekend you're curious about:</p>\n            <DayPicker \n              mode=\"single\" \n              required \n              defaultSelected={this.state.date}\n              onSelect={(e) => this.updateDate(e!)} />\n          </div>\n          <div className=\"App-result\">\n            {!hasFuture &&\n            <p>Waiting for a selection...</p>\n            }\n            {hasFuture &&\n            <p>{this.state.future}</p>\n            }\n          </div>\n        </div>\n        Image by <a href=\"https://pixabay.com/users/esudroff-627167/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1399332\">esudroff</a> from <a href=\"https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1399332\">Pixabay</a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}